datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(uuid())
  username        String?   @unique
  imageUrl        String    @db.Text
  email           String    @unique
  externalUserId  String    @unique
  bio             String?   @db.Text

  folower         Follow[]  @relation("FolowerToUser")
  following       Follow[]  @relation("FollowingToUser")

  blocker         Block[]   @relation("BlockerToUser")
  blocked         Block[]   @relation("BlockedToUser")

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Follow {
  id              String    @id @default(uuid())
  followerId      String
  followingId     String
  folower         User      @relation("FolowerToUser", fields: [followerId], references: [id], onDelete: Cascade)
  following       User      @relation("FollowingToUser", fields: [followingId], references: [id], onDelete: Cascade)

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([followerId])
  @@index([followingId])
  @@unique([followerId, followingId])
}

model Block {
  id              String    @id @default(uuid())
  blockerId       String
  blockedId       String

  blocker         User      @relation("BlockerToUser", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked         User      @relation("BlockedToUser", fields: [blockedId], references: [id], onDelete: Cascade)

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([blockerId])
  @@index([blockedId])
  @@unique([blockerId, blockedId])
}